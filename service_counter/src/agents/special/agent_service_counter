#!/usr/bin/env python3
"""
Agent Servicecounter

2024-03 Kuhn & Rue√ü GmbH, bastian.kuhn@kuhn-ruess.de
"""
import sys
import requests
import json

import cmk.utils.site
from cmk.utils.site import omd_site


OLD_CHECKMK = False

try:
    from cmk.utils.crypto.secrets import AutomationUserSecret
except ImportError:
    from cmk.utils.paths import profile_dir
    OLD_CHECKMK = True

class AgentServicecounter():
    """
    Agent Json
    """


    def __init__(self):
        """
        Init
        """
        self.config = [ x.split('|') for x in sys.argv[1:]]

        self._username = 'automation'

        if OLD_CHECKMK:
            self._secret = (profile_dir / self._username / "automation.secret").read_text(
                encoding="utf-8")
        else:
            self._secret = AutomationUserSecret(self._username).read()

        self._site_url = "http://localhost:%d/%s" % (
            cmk.utils.site.get_apache_port(),
            omd_site(),
        )


    def get(self, url, params):
        """
        Simple Get
        """
        full_url = f"{self._site_url}"\
                    + "/check_mk/api/1.0/"\
                    + url

        return requests.get(
                full_url,
                headers={"Authorization":
                         f"Bearer {self._username} {self._secret.strip()}"},
                timeout=30,
                params=params).json()



    def get_services(self):
        """
        Get services from Livestatus API
        """
        print("<<<local>>>")
        for service_name, service_output in self.config:
            expr = []
            expr.append({
                "op": "and", "expr": [
                    {"op": "=", "left": "description", "right": f"{service_name}"},
                    {"op": "~", "left": "plugin_output", "right": f"{service_output}"}
                ]
            })

            params={
                "query":
                str(json.dumps({
                   "op": "or",
                   "expr": expr,
                }))
            }
            url = "domain-types/service/collections/all"
            count = len(self.get(url, params)['value'])
            print(f"0 \"Count {service_name} {service_output}\" count={count} Found {count} times")


if __name__ == "__main__":
    agent = AgentServicecounter()
    agent.get_services()
